local lIlI1iil1iIilliIIll1I = assert local IlI11Ii1IIl1l1IiliI = select local Il11l1i11i1ilI11lli = tonumber local lIlI1IIliIlI1i11i1il1 = unpack local iIl11i1lIilIilI1I1i = pcall local lIl1IIil1I1liliIl11I1 = setfenv local lIIIIii1iiilIi1iiIi = setmetatable local lIlIiiIli1iiIilIIil1l = type local lIlllIi1ili1llI11iiII = getfenv local l1II11IiIl1l1l1IiII = tostring local IliillliIIl1l1IIiII = error local iIII11lI1Ii11lIlIlI = string.sub local lIlIiil1iI1i111ll1iIi = string.byte local lIi1i1iiIIl1il1liII = string.char local i111llII1llill1Iill = string.rep local ii1lIl1ii1I1lIIllll = string.gsub local lI1iilI1Iiil11IIIii = string.match local ill1111IlIl1iIiI111 = table.insert local l1iI1i1IiI1lIIIi11I = lIlIiil1iI1i111ll1iIi("}", 1) local IilliIiI1IiIIli1Iii, I1IlIilliIiIII1llli = #{1817}, #{ 3762, 3347, 1953, 92, 1159, 5279, 2629, 2457, 1785, 6349, 2193, 5323, 1544, 4108, 6061, 5891, 6282, 3970, 255, 6943 } + l1iI1i1IiI1lIIIi11I + 130926 local l1liIliI1III1Iil11l = {} local IilI1I111li1Ii1lII1 = 1 local IlI1III1iil1IlI1II1, iliiI1ll1I1ilIIii1l local function llii1liliIIIllliiil(iIliI1Iliill1iIliiI, liiIlI1liiI1il11lIi) local iI1i1li11I1iIIlIiii iIliI1Iliill1iIliiI = ii1lIl1ii1I1lIIllll(iIII11lI1Ii11lIlIlI(iIliI1Iliill1iIliiI, 5), "..", function(llll1Ii1l11l1l1IIi1) if lIlIiil1iI1i111ll1iIi(llll1Ii1l11l1l1IIi1, 2) == 72 then iI1i1li11I1iIIlIiii = Il11l1i11i1ilI11lli(iIII11lI1Ii11lIlIlI(llll1Ii1l11l1l1IIi1, 1, 1)) return "" else local llI1Iiil11il1IIIill = lIi1i1iiIIl1il1liII(Il11l1i11i1ilI11lli(llll1Ii1l11l1l1IIi1, 16)) if iI1i1li11I1iIIlIiii then local iliiiIliilIl1il1Ii1 = i111llII1llill1Iill(llI1Iiil11il1IIIill, iI1i1li11I1iIIlIiii) iI1i1li11I1iIIlIiii = nil return iliiiIliilIl1il1Ii1 else return llI1Iiil11il1IIIill end end end) local function li1IiIili1lIii11l1l() local iIll1iill1l1Ii11Ii1 = lIlIiil1iI1i111ll1iIi(iIliI1Iliill1iIliiI, IilI1I111li1Ii1lII1, IilI1I111li1Ii1lII1) IilI1I111li1Ii1lII1 = IilI1I111li1Ii1lII1 + 1 return iIll1iill1l1Ii11Ii1 end local function lIlIillliiii11illili1() local iIll1iill1l1Ii11Ii1, llI1Iiil11il1IIIill, iliiiIliilIl1il1Ii1, il11lI11lliili1llli = lIlIiil1iI1i111ll1iIi(iIliI1Iliill1iIliiI, IilI1I111li1Ii1lII1, IilI1I111li1Ii1lII1 + 3) IilI1I111li1Ii1lII1 = IilI1I111li1Ii1lII1 + 4 return il11lI11lliili1llli * 16777216 + iliiiIliilIl1il1Ii1 * 65536 + llI1Iiil11il1IIIill * 256 + iIll1iill1l1Ii11Ii1 end local function I1iIllIIIi1ill11IiI(lllIlii1liIIi1lliii, i1I1III11Iii11iII11, lIllIlIl11IiIIIiiIIl1) if lIllIlIl11IiIIIiiIIl1 then local ll1l1Ii1l111ilIii11, iliiil1IliIIiI11III = 0, 0 for lIlIIi1IiIi1Iilil1IIl = i1I1III11Iii11iII11, lIllIlIl11IiIIIiiIIl1 do ll1l1Ii1l111ilIii11 = ll1l1Ii1l111ilIii11 + 2 ^ iliiil1IliIIiI11III * I1iIllIIIi1ill11IiI(lllIlii1liIIi1lliii, lIlIIi1IiIi1Iilil1IIl) iliiil1IliIIiI11III = iliiil1IliIIiI11III + 1 end return ll1l1Ii1l111ilIii11 else local lIlil1111lllliIIiiIl1 = 2 ^ (i1I1III11Iii11iII11 - 1) return lIlil1111lllliIIiiIl1 <= lllIlii1liIIi1lliii % (lIlil1111lllliIIiiIl1 + lIlil1111lllliIIiiIl1) and 1 or 0 end end local function lIlIi1ililililI1iiII1() local iIll1iill1l1Ii11Ii1, llI1Iiil11il1IIIill = lIlIillliiii11illili1(), lIlIillliiii11illili1() if iIll1iill1l1Ii11Ii1 == 0 and llI1Iiil11il1IIIill == 0 then return 0 end return (-2 * I1iIllIIIi1ill11IiI(llI1Iiil11il1IIIill, 32) + 1) * 2 ^ (I1iIllIIIi1ill11IiI(llI1Iiil11il1IIIill, 21, 31) - 1023) * ((I1iIllIIIi1ill11IiI(llI1Iiil11il1IIIill, 1, 20) * 4294967296 + iIll1iill1l1Ii11Ii1) / 4503599627370496 + 1) end local lIlI1lil11iliiIiIlliI = bit or bit32 local lI1IlIlI1li1ilIIlII = lIlI1lil11iliiIiIlliI and lIlI1lil11iliiIiIlliI.bxor or function(iIll1iill1l1Ii11Ii1, llI1Iiil11il1IIIill) local I11lII1il1Ii1li1liI = 1 local iliiiIliilIl1il1Ii1 = 0 while iIll1iill1l1Ii11Ii1 > 0 and llI1Iiil11il1IIIill > 0 do local lIllil1ilIliiiI1ii1Il = iIll1iill1l1Ii11Ii1 % 2 local lIllI1I1iI1l1llIIill1 = llI1Iiil11il1IIIill % 2 if lIllil1ilIliiiI1ii1Il ~= lIllI1I1iI1l1llIIill1 then iliiiIliilIl1il1Ii1 = iliiiIliilIl1il1Ii1 + I11lII1il1Ii1li1liI end iIll1iill1l1Ii11Ii1 = (iIll1iill1l1Ii11Ii1 - lIllil1ilIliiiI1ii1Il) / 2 llI1Iiil11il1IIIill = (llI1Iiil11il1IIIill - lIllI1I1iI1l1llIIill1) / 2 I11lII1il1Ii1li1liI = I11lII1il1Ii1li1liI * 2 end if iIll1iill1l1Ii11Ii1 < llI1Iiil11il1IIIill then iIll1iill1l1Ii11Ii1 = llI1Iiil11il1IIIill end while iIll1iill1l1Ii11Ii1 > 0 do local lIllil1ilIliiiI1ii1Il = iIll1iill1l1Ii11Ii1 % 2 if lIllil1ilIliiiI1ii1Il > 0 then iliiiIliilIl1il1Ii1 = iliiiIliilIl1il1Ii1 + I11lII1il1Ii1li1liI end iIll1iill1l1Ii11Ii1 = (iIll1iill1l1Ii11Ii1 - lIllil1ilIliiiI1ii1Il) / 2 I11lII1il1Ii1li1liI = I11lII1il1Ii1li1liI * 2 end return iliiiIliilIl1il1Ii1 end local function iIl1iili1illilI1i11(lIllIIi1Il1l1ll1ilIlI) local iiiiiiIll1lIIiliill = { lIlIiil1iI1i111ll1iIi(iIliI1Iliill1iIliiI, IilI1I111li1Ii1lII1, IilI1I111li1Ii1lII1 + 3) } IilI1I111li1Ii1lII1 = IilI1I111li1Ii1lII1 + 4 local iIll1iill1l1Ii11Ii1 = lI1IlIlI1li1ilIIlII(iiiiiiIll1lIIiliill[1], iliiI1ll1I1ilIIii1l) local llI1Iiil11il1IIIill = lI1IlIlI1li1ilIIlII(iiiiiiIll1lIIiliill[2], iliiI1ll1I1ilIIii1l) local iliiiIliilIl1il1Ii1 = lI1IlIlI1li1ilIIlII(iiiiiiIll1lIIiliill[3], iliiI1ll1I1ilIIii1l) local il11lI11lliili1llli = lI1IlIlI1li1ilIIlII(iiiiiiIll1lIIiliill[4], iliiI1ll1I1ilIIii1l) iliiI1ll1I1ilIIii1l = (41 * iliiI1ll1I1ilIIii1l + lIllIIi1Il1l1ll1ilIlI) % 256 return il11lI11lliili1llli * 16777216 + iliiiIliilIl1il1Ii1 * 65536 + llI1Iiil11il1IIIill * 256 + iIll1iill1l1Ii11Ii1 end local function i11l1lIl1lliillI11l(lIlillllIliIi1iiIlil1) local IiIllIllii1IIiillI1 = lIlIillliiii11illili1() local iIl111lliII1I1l1iiI = "" for lIlIIi1IiIi1Iilil1IIl = IilliIiI1IiIIli1Iii, IiIllIllii1IIiillI1 do iIl111lliII1I1l1iiI = iIl111lliII1I1l1iiI .. lIi1i1iiIIl1il1liII(lI1IlIlI1li1ilIIlII(lIlIiil1iI1i111ll1iIi(iIliI1Iliill1iIliiI, IilI1I111li1Ii1lII1 + lIlIIi1IiIi1Iilil1IIl - 1), IlI1III1iil1IlI1II1)) IlI1III1iil1IlI1II1 = (lIlillllIliIi1iiIlil1 * IlI1III1iil1IlI1II1 + 35) % 256 end IilI1I111li1Ii1lII1 = IilI1I111li1Ii1lII1 + IiIllIllii1IIiillI1 return iIl111lliII1I1l1iiI end IlI1III1iil1IlI1II1 = li1IiIili1lIii11l1l() iliiI1ll1I1ilIIii1l = li1IiIili1lIii11l1l() local l1i1IIIiiiI1ilIliIl = {} for lIlIIi1IiIi1Iilil1IIl = IilliIiI1IiIIli1Iii, li1IiIili1lIii11l1l() do local I1l11i1iiIIl1i11i1i = li1IiIili1lIii11l1l() local ili11lI1liIIIi11iii = (lIlIIi1IiIi1Iilil1IIl - 1) * 2 l1i1IIIiiiI1ilIliIl[ili11lI1liIIIi11iii] = I1iIllIIIi1ill11IiI(I1l11i1iiIIl1i11i1i, 1, 4) l1i1IIIiiiI1ilIliIl[ili11lI1liIIIi11iii + 1] = I1iIllIIIi1ill11IiI(I1l11i1iiIIl1i11i1i, 5, 8) end local function iIli1Ii11l1i1iIll1I() local IIlIIlIiliiIiII1il1 = { {}, {}, nil, {}, {}, nil, nil } local IiIIlIIiilIiIIIIIl1 = lIlIillliiii11illili1() for lIlIIi1IiIi1Iilil1IIl = IilliIiI1IiIIli1Iii, IiIIlIIiilIiIIIIIl1 do IIlIIlIiliiIiII1il1[4][lIlIIi1IiIi1Iilil1IIl - IilliIiI1IiIIli1Iii] = iIli1Ii11l1i1iIll1I() end IIlIIlIiliiIiII1il1[3] = li1IiIili1lIii11l1l() li1IiIili1lIii11l1l() lIlIillliiii11illili1() lIlIillliiii11illili1() lIlIillliiii11illili1() lIlIillliiii11illili1() li1IiIili1lIii11l1l() li1IiIili1lIii11l1l() li1IiIili1lIii11l1l() li1IiIili1lIii11l1l() lIlIillliiii11illili1() li1IiIili1lIii11l1l() local IiIIlIIiilIiIIIIIl1 = lIlIillliiii11illili1() - (#{ 462, 4979, 5806, 3198, 3615, 5554, 1794, 6558, 4934, 191, 3301, 2981, 706, 1322, 4693, 3609, 5708, 1337, 1764, 6201 } + l1iI1i1IiI1lIIIi11I + 133629) local IIliiIil1lllIi1ll11 = li1IiIili1lIii11l1l() for lIlIIi1IiIi1Iilil1IIl = IilliIiI1IiIIli1Iii, IiIIlIIiilIiIIIIIl1 do local I1il11liiilllIllIIl local lIlIiiIli1iiIilIIil1l = li1IiIili1lIii11l1l() if lIlIiiIli1iiIilIIil1l == #{ 2565, 1450, 609, 1144, 3878, 5873, 2393, 5581, 5778, 1221, 6477, 6690, 3313, 3778, 4569, 1978, 6273, 2541, 4390, 552, 4670 } + l1iI1i1IiI1lIIIi11I + -50 then I1il11liiilllIllIIl = li1IiIili1lIii11l1l() end if lIlIiiIli1iiIilIIil1l == #{ 5809, 6307, 269, 5380, 6138, 2705, 5208, 3592, 5982, 6464, 5846, 3948, 4626, 5374, 1534, 1341, 3116, 5136, 2097, 5026 } + l1iI1i1IiI1lIIIi11I + -44 then I1il11liiilllIllIIl = #{ 420, 5145, 5954, 5480, 742, 5211, 4172, 1770, 3984, 2849, 1284, 53, 4617, 2622, 625, 1205, 6737, 5306, 512, 3711 } + l1iI1i1IiI1lIIIi11I + 48700 == #{ 420, 5145, 5954, 5480, 742, 5211, 4172, 1770, 3984, 2849, 1284, 53, 4617, 2622, 625, 1205, 6737, 5306, 512, 3711 } + l1iI1i1IiI1lIIIi11I + 48700 end if lIlIiiIli1iiIilIIil1l == #{ 5187, 2533, 239, 5032, 2116, 6935, 1, 4811, 5811, 4809, 3479, 6736, 2558, 641, 5218, 508, 5268, 6962, 15, 3021, 3231 } + l1iI1i1IiI1lIIIi11I + -55 then I1il11liiilllIllIIl = iIII11lI1Ii11lIlIlI(i11l1lIl1lliillI11l(IIliiIil1lllIi1ll11), #{ 563, 4867, 2759, 4165, 5361 }) end if lIlIiiIli1iiIilIIil1l == #{ 6159, 3264, 3826, 5254, 2355, 2430, 3110, 5894, 22, 6436, 1542, 1141, 4425, 4596, 4016, 4415, 2972, 1576, 6013, 591, 2144 } + l1iI1i1IiI1lIIIi11I + 72 then I1il11liiilllIllIIl = lIlIi1ililililI1iiII1() end if lIlIiiIli1iiIilIIil1l == #{ 5128, 1873, 5836, 855, 599, 3346, 3210, 3224, 6382, 3511, 852, 5371, 6655, 5985, 943, 4023, 5680, 3050, 73, 801, 3299, 1402 } + l1iI1i1IiI1lIIIi11I + -85 then I1il11liiilllIllIIl = lIlIi1ililililI1iiII1() + lIlIi1ililililI1iiII1() end if lIlIiiIli1iiIilIIil1l == #{ 6525, 4606, 4526, 5702, 3803, 1621, 490, 1171, 3131, 3168, 4483, 1275, 4521, 4062, 1197, 4634, 807, 447, 843, 5727, 3291, 1814 } + l1iI1i1IiI1lIIIi11I + 94 then I1il11liiilllIllIIl = iIII11lI1Ii11lIlIlI(i11l1lIl1lliillI11l(IIliiIil1lllIi1ll11), #{ 5665, 6727, 4275 }) end if lIlIiiIli1iiIilIIil1l == #{ 3950, 1827, 5985, 5300, 31, 4175, 4716, 6133, 114, 5167, 5524, 5184, 6166, 3945, 2306, 6798, 4569, 2995, 1286, 250, 4640, 3282, 4491 } + l1iI1i1IiI1lIIIi11I + -40 then I1il11liiilllIllIIl = lIlIi1ililililI1iiII1() end if lIlIiiIli1iiIilIIil1l == #{ 4764, 3980, 5655, 6758, 1934, 5831, 5303, 6235, 5670, 5486, 295, 5197, 1749, 4599, 649, 3992, 3155, 2016, 3035, 5607, 6194 } + l1iI1i1IiI1lIIIi11I + 72 then I1il11liiilllIllIIl = li1IiIili1lIii11l1l() end if lIlIiiIli1iiIilIIil1l == #{ 2559, 66, 601, 5215, 2906, 634, 1431, 5376, 4374, 58, 5141, 4110, 3927, 6836, 1895, 4189, 3568, 1638, 5381, 5366, 6693 } + l1iI1i1IiI1lIIIi11I + -13 then I1il11liiilllIllIIl = #{ 4969, 939, 5081, 2282, 6348, 3891, 921, 6130, 5078, 591, 1824, 4431, 1058, 4018, 3620, 2211, 1860, 3376, 714, 4213 } + l1iI1i1IiI1lIIIi11I + 55718 == #{ 4430, 3073, 1550, 3544, 2817, 1567, 3204, 3032, 4901, 2866, 2348, 3753, 6446, 1354, 1512, 6443, 5333, 4789, 1962, 499, 4543, 1346 } + l1iI1i1IiI1lIIIi11I + 131891 end IIlIIlIiliiIiII1il1[5][lIlIIi1IiIi1Iilil1IIl - IilliIiI1IiIIli1Iii] = I1il11liiilllIllIIl end local IiIIlIIiilIiIIIIIl1 = lIlIillliiii11illili1() for lIlIIi1IiIi1Iilil1IIl = IilliIiI1IiIIli1Iii, IiIIlIIiilIiIIIIIl1 do IIlIIlIiliiIiII1il1[1][lIlIIi1IiIi1Iilil1IIl] = lIlIillliiii11illili1() end IIlIIlIiliiIiII1il1[6] = li1IiIili1lIii11l1l() li1IiIili1lIii11l1l() lIlIillliiii11illili1() local lIliI1il1iIIilliilI1i = lIlIillliiii11illili1() - (#{ 3882, 2511, 3588, 5017, 6181, 5100, 2645, 6330, 3191, 6743, 2164, 1665, 5896, 5241, 6021, 4808, 516, 752, 930, 5460, 4080, 5179 } + l1iI1i1IiI1lIIIi11I + 133571) local lIll11IiIIliiiliiIIil = li1IiIili1lIii11l1l() for lIlIIi1IiIi1Iilil1IIl = IilliIiI1IiIIli1Iii, lIliI1il1iIIilliilI1i do local Iii11111lllii1lI1i1 = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local I1l11i1iiIIl1i11i1i = iIl1iili1illilI1i11(lIll11IiIIliiiliiIIil) Iii11111lllii1lI1i1[7] = I1iIllIIIi1ill11IiI(I1l11i1iiIIl1i11i1i, #{2699}, #{ 3102, 5962, 4630, 6349, 4009, 6179, 6778, 3131, 4891 }) Iii11111lllii1lI1i1[9] = I1iIllIIIi1ill11IiI(I1l11i1iiIIl1i11i1i, #{ 147, 917, 2975, 3949, 6403, 3424, 1009, 1680, 2620, 1666 }, #{ 1279, 2261, 1993, 3157, 5063, 4324, 6057, 6811, 1896, 536, 4730, 2450, 5838, 5407, 5125, 4926, 2048, 1503 }) Iii11111lllii1lI1i1[2] = I1iIllIIIi1ill11IiI(I1l11i1iiIIl1i11i1i, #{ 1026, 4873, 1342, 4722, 5657, 3935, 1160, 6396, 1955, 6365, 5075, 2954, 6089, 534, 6549, 559, 3607, 4435, 2016, 754, 1529, 6049, 773, 6093 } + l1iI1i1IiI1lIIIi11I + -122, #{ 1442, 4595, 3848, 6670, 1354, 6591, 4462, 4210, 4712, 699, 4306, 2459, 4709, 4303, 1448, 6380, 5865, 812, 4758, 230, 1118 } + l1iI1i1IiI1lIIIi11I + -114) Iii11111lllii1lI1i1[3] = I1iIllIIIi1ill11IiI(I1l11i1iiIIl1i11i1i, #{1183}, #{ 493, 4698, 1473, 4341, 3839, 2897, 5469, 4104, 3571, 28, 895, 1264, 3911, 6570, 4031, 5640, 1808, 5415 }) Iii11111lllii1lI1i1[8] = I1iIllIIIi1ill11IiI(I1l11i1iiIIl1i11i1i, #{ 4963, 1465, 4196, 5665, 3094, 1280, 1219, 3115, 841, 2702, 2808, 3203, 513, 469, 757, 1110, 5798, 3795, 1089 }, #{ 6426, 3091, 2526, 2251, 2007, 6678, 1462, 6459, 1433, 2072, 2091, 1522, 309, 585, 1329, 2884, 6403, 6276, 5768, 6320, 5701, 5155, 4719 } + l1iI1i1IiI1lIIIi11I + -122) IIlIIlIiliiIiII1il1[2][lIlIIi1IiIi1Iilil1IIl] = Iii11111lllii1lI1i1 end for lIlIIi1IiIi1Iilil1IIl = IilliIiI1IiIIli1Iii, lIliI1il1iIIilliilI1i do local Iii11111lllii1lI1i1 = IIlIIlIiliiIiII1il1[2][lIlIIi1IiIi1Iilil1IIl] local li111l1liIiiIi1lIli = l1i1IIIiiiI1ilIliIl[Iii11111lllii1lI1i1[2]] if li111l1liIiiIi1lIli == #{ 4325, 2618, 988, 3719 } then Iii11111lllii1lI1i1[6] = IIlIIlIiliiIiII1il1[5][Iii11111lllii1lI1i1[3]] end if li111l1liIiiIi1lIli == #{1998, 6025} and Iii11111lllii1lI1i1[9] > 255 then Iii11111lllii1lI1i1[1] = true Iii11111lllii1lI1i1[4] = IIlIIlIiliiIiII1il1[5][Iii11111lllii1lI1i1[9] - 256] end if li111l1liIiiIi1lIli == #{ 721, 5326, 3551 } then if Iii11111lllii1lI1i1[7] > 255 then Iii11111lllii1lI1i1[10] = true Iii11111lllii1lI1i1[5] = IIlIIlIiliiIiII1il1[5][Iii11111lllii1lI1i1[7] - 256] end if Iii11111lllii1lI1i1[9] > 255 then Iii11111lllii1lI1i1[1] = true Iii11111lllii1lI1i1[4] = IIlIIlIiliiIiII1il1[5][Iii11111lllii1lI1i1[9] - 256] end end if li111l1liIiiIi1lIli == #{995} and Iii11111lllii1lI1i1[7] > 255 then Iii11111lllii1lI1i1[10] = true Iii11111lllii1lI1i1[5] = IIlIIlIiliiIiII1il1[5][Iii11111lllii1lI1i1[7] - 256] end end lIlIillliiii11illili1() IIlIIlIiliiIiII1il1[7] = li1IiIili1lIii11l1l() return IIlIIlIiliiIiII1il1 end local function lIliI1l1ii1IlII1Iiii1(IIlIIlIiliiIiII1il1, liiIlI1liiI1il11lIi, lIlil1IIliiiIl1lii11l) local lIllli111lll1i1Ill1ii, lIliliI111l1IIliiiIli = 17, 19 local ll11lIilIilIIiIlIlI = IIlIIlIiliiIiII1il1[2] local IliIiIl11IIIll1liil = 6 local i1liIii11iI1i1I1Il1 = IIlIIlIiliiIiII1il1[4] local III1lI11i1ll111illI = IIlIIlIiliiIiII1il1[7] local I11IlIilil11IIll1ll = IIlIIlIiliiIiII1il1[3] local lIl1liIIIi1IIliIlI1i1 = 2 local lIl11iii11llI11IIiiIi = IIlIIlIiliiIiII1il1[1] local IIi1l1IilIIiiiI1lll = 7 local function i11lIlIi11iiIi11l11(...) local lIl1i111ilIIilil1IIil = 0 local liIi1lIlI1lIII1IIiI = { lIlI1IIliIlI1i11i1il1({}, 1, I11IlIilil11IIll1ll) } local lIllIIIlI1iIl111iiIlI = 1 local lIl1III1l1l1iI1l11iiI = {} local lIliiI1lIlIIi11iIIIIl = {} local liiIlI1liiI1il11lIi = lIlllIi1ili1llI11iiII() local iIIilIiiliIII1llI1l = { ... } local l11ll11liIIllIIiIll = #iIIilIiiliIII1llI1l - 1 for lIlIIi1IiIi1Iilil1IIl = 0, l11ll11liIIllIIiIll do if lIlIIi1IiIi1Iilil1IIl < III1lI11i1ll111illI then liIi1lIlI1lIII1IIiI[lIlIIi1IiIi1Iilil1IIl] = iIIilIiiliIII1llI1l[lIlIIi1IiIi1Iilil1IIl + 1] end end local function il1I11I1IiiiIl1111I(...) local iliiiIliilIl1il1Ii1 = IlI11Ii1IIl1l1IiliI("#", ...) local il1li1iil1lll11iIII = { ... } return iliiiIliilIl1il1Ii1, il1li1iil1lll11iIII end local function l1Il1II1IliI1iI1li1() while true do local lII1iIi1IIlIiIil1l1 = ll11lIilIilIIiIlIlI[lIllIIIlI1iIl111iiIlI] local Illl1iIIiIIi1111iii = lII1iIi1IIlIiIil1l1[2] lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI + 1 if Illl1iIIiIIi1111iii < 13 then if Illl1iIIiIIi1111iii < 6 then if Illl1iIIiIIi1111iii < 3 then if Illl1iIIiIIi1111iii < 1 then if lII1iIi1IIlIiIil1l1[9] == 168 then lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI - 1 ll11lIilIilIIiIlIlI[lIllIIIlI1iIl111iiIlI] = { [2] = 17, [8] = (lII1iIi1IIlIiIil1l1[8] - 112) % 256, [7] = (lII1iIi1IIlIiIil1l1[7] - 112) % 256 } else lIlil1IIliiiIl1lii11l[lII1iIi1IIlIiIil1l1[7]] = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] end elseif Illl1iIIiIIi1111iii == 2 then local llI1Iiil11il1IIIill, iliiiIliilIl1il1Ii1 if lII1iIi1IIlIiIil1l1[10] then llI1Iiil11il1IIIill = lII1iIi1IIlIiIil1l1[5] else llI1Iiil11il1IIIill = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[7]] end if lII1iIi1IIlIiIil1l1[1] then iliiiIliilIl1il1Ii1 = lII1iIi1IIlIiIil1l1[4] else iliiiIliilIl1il1Ii1 = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[9]] end liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = llI1Iiil11il1IIIill + iliiiIliilIl1il1Ii1 else liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = -liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[7]] end elseif Illl1iIIiIIi1111iii < 4 then liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = { lIlI1IIliIlI1i11i1il1(l1liIliI1III1Iil11l, 1, lII1iIi1IIlIiIil1l1[7] == 0 and 255 or lII1iIi1IIlIiIil1l1[7]) } elseif Illl1iIIiIIi1111iii == 5 then local iliiiIliilIl1il1Ii1 if lII1iIi1IIlIiIil1l1[1] then iliiiIliilIl1il1Ii1 = lII1iIi1IIlIiIil1l1[4] else iliiiIliilIl1il1Ii1 = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[9]] end liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[7]][iliiiIliilIl1il1Ii1] else local llI1Iiil11il1IIIill, iliiiIliilIl1il1Ii1 if lII1iIi1IIlIiIil1l1[10] then llI1Iiil11il1IIIill = lII1iIi1IIlIiIil1l1[5] else llI1Iiil11il1IIIill = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[7]] end if lII1iIi1IIlIiIil1l1[1] then iliiiIliilIl1il1Ii1 = lII1iIi1IIlIiIil1l1[4] else iliiiIliilIl1il1Ii1 = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[9]] end if llI1Iiil11il1IIIill < iliiiIliilIl1il1Ii1 ~= (lII1iIi1IIlIiIil1l1[8] ~= 0) then lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI + 1 end end elseif Illl1iIIiIIi1111iii < 9 then if Illl1iIIiIIi1111iii >= 7 then if Illl1iIIiIIi1111iii ~= 8 then local llI1Iiil11il1IIIill, iliiiIliilIl1il1Ii1 if lII1iIi1IIlIiIil1l1[10] then llI1Iiil11il1IIIill = lII1iIi1IIlIiIil1l1[5] else llI1Iiil11il1IIIill = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[7]] end if lII1iIi1IIlIiIil1l1[1] then iliiiIliilIl1il1Ii1 = lII1iIi1IIlIiIil1l1[4] else iliiiIliilIl1il1Ii1 = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[9]] end if llI1Iiil11il1IIIill == iliiiIliilIl1il1Ii1 ~= (lII1iIi1IIlIiIil1l1[8] ~= 0) then lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI + 1 end else local llI1Iiil11il1IIIill, iliiiIliilIl1il1Ii1 if lII1iIi1IIlIiIil1l1[10] then llI1Iiil11il1IIIill = lII1iIi1IIlIiIil1l1[5] else llI1Iiil11il1IIIill = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[7]] end if lII1iIi1IIlIiIil1l1[1] then iliiiIliilIl1il1Ii1 = lII1iIi1IIlIiIil1l1[4] else iliiiIliilIl1il1Ii1 = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[9]] end liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = llI1Iiil11il1IIIill * iliiiIliilIl1il1Ii1 end else local ili1iliIIli1IIII1ii = lII1iIi1IIlIiIil1l1[8] local iIIilIiiliIII1llI1l = lII1iIi1IIlIiIil1l1[7] local IIil1IliIIiiliI111i = lII1iIi1IIlIiIil1l1[9] local lIlIi1l1iilIil1illlii, II1llI1liiiIlII1l11, l1Il1II1IliI1iI1li1 if iIIilIiiliIII1llI1l ~= 1 then if iIIilIiiliIII1llI1l ~= 0 then II1llI1liiiIlII1l11 = ili1iliIIli1IIII1ii + iIIilIiiliIII1llI1l - 1 else II1llI1liiiIlII1l11 = lIl1i111ilIIilil1IIil end II1llI1liiiIlII1l11, lIlIi1l1iilIil1illlii = il1I11I1IiiiIl1111I(liIi1lIlI1lIII1IIiI[ili1iliIIli1IIII1ii](lIlI1IIliIlI1i11i1il1(liIi1lIlI1lIII1IIiI, ili1iliIIli1IIII1ii + 1, II1llI1liiiIlII1l11))) else II1llI1liiiIlII1l11, lIlIi1l1iilIil1illlii = il1I11I1IiiiIl1111I(liIi1lIlI1lIII1IIiI[ili1iliIIli1IIII1ii]()) end if IIil1IliIIiiliI111i ~= 1 then if IIil1IliIIiiliI111i ~= 0 then II1llI1liiiIlII1l11 = ili1iliIIli1IIII1ii + IIil1IliIIiiliI111i - 2 lIl1i111ilIIilil1IIil = II1llI1liiiIlII1l11 + 1 else II1llI1liiiIlII1l11 = II1llI1liiiIlII1l11 + ili1iliIIli1IIII1ii - 1 lIl1i111ilIIilil1IIil = II1llI1liiiIlII1l11 end l1Il1II1IliI1iI1li1 = 0 for lIlIIi1IiIi1Iilil1IIl = ili1iliIIli1IIII1ii, II1llI1liiiIlII1l11 do l1Il1II1IliI1iI1li1 = l1Il1II1IliI1iI1li1 + 1 liIi1lIlI1lIII1IIiI[lIlIIi1IiIi1Iilil1IIl] = lIlIi1l1iilIil1illlii[l1Il1II1IliI1iI1li1] end else lIl1i111ilIIilil1IIil = ili1iliIIli1IIII1ii - 1 end for lIlIIi1IiIi1Iilil1IIl = lIl1i111ilIIilil1IIil + 1, I11IlIilil11IIll1ll do liIi1lIlI1lIII1IIiI[lIlIIi1IiIi1Iilil1IIl] = nil end end elseif Illl1iIIiIIi1111iii < 11 then if Illl1iIIiIIi1111iii == 10 then lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI + (lII1iIi1IIlIiIil1l1[3] - I1IlIilliIiIII1llli) else lIl1III1l1l1iI1l11iiI[liIi1lIlI1lIII1IIiI] = nil local ili1iliIIli1IIII1ii = lII1iIi1IIlIiIil1l1[8] local Il1111lII1iII11Ii1I = lII1iIi1IIlIiIil1l1[7] if Il1111lII1iII11Ii1I == 1 then return true end local II1llI1liiiIlII1l11 = ili1iliIIli1IIII1ii + Il1111lII1iII11Ii1I - 2 if Il1111lII1iII11Ii1I == 0 then II1llI1liiiIlII1l11 = lIl1i111ilIIilil1IIil end return true, ili1iliIIli1IIII1ii, II1llI1liiiIlII1l11 end elseif Illl1iIIiIIi1111iii ~= 12 then if lII1iIi1IIlIiIil1l1[9] == 81 then lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI - 1 ll11lIilIilIIiIlIlI[lIllIIIlI1iIl111iiIlI] = { [2] = 0, [8] = (lII1iIi1IIlIiIil1l1[8] - 245) % 256, [7] = (lII1iIi1IIlIiIil1l1[7] - 245) % 256 } elseif lII1iIi1IIlIiIil1l1[9] == 26 then lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI - 1 ll11lIilIilIIiIlIlI[lIllIIIlI1iIl111iiIlI] = { [2] = 1, [8] = (lII1iIi1IIlIiIil1l1[8] - 187) % 256, [7] = (lII1iIi1IIlIiIil1l1[7] - 187) % 256 } else liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = not liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[7]] end elseif lII1iIi1IIlIiIil1l1[9] == 173 then lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI - 1 ll11lIilIilIIiIlIlI[lIllIIIlI1iIl111iiIlI] = { [2] = 9, [8] = (lII1iIi1IIlIiIil1l1[8] - 207) % 256, [7] = (lII1iIi1IIlIiIil1l1[7] - 207) % 256 } else liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = #liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[7]] end elseif Illl1iIIiIIi1111iii >= 20 then if Illl1iIIiIIi1111iii < 23 then if Illl1iIIiIIi1111iii < 21 then if not not liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] == (lII1iIi1IIlIiIil1l1[9] == 0) then lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI + 1 end elseif Illl1iIIiIIi1111iii ~= 22 then liiIlI1liiI1il11lIi[lII1iIi1IIlIiIil1l1[6]] = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] else local I1ll11lI1IliiIiIiil = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[7]] local iliiiIliilIl1il1Ii1 if lII1iIi1IIlIiIil1l1[1] then iliiiIliilIl1il1Ii1 = lII1iIi1IIlIiIil1l1[4] else iliiiIliilIl1il1Ii1 = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[9]] end liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8] + 1] = I1ll11lI1IliiIiIiil liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = I1ll11lI1IliiIiIiil[iliiiIliilIl1il1Ii1] end elseif Illl1iIIiIIi1111iii >= 25 then if Illl1iIIiIIi1111iii == 26 then liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = lII1iIi1IIlIiIil1l1[7] ~= 0 if lII1iIi1IIlIiIil1l1[9] ~= 0 then lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI + 1 end else liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = lII1iIi1IIlIiIil1l1[6] end elseif Illl1iIIiIIi1111iii == 24 then local llI1Iiil11il1IIIill, iliiiIliilIl1il1Ii1 if lII1iIi1IIlIiIil1l1[10] then llI1Iiil11il1IIIill = lII1iIi1IIlIiIil1l1[5] else llI1Iiil11il1IIIill = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[7]] end if lII1iIi1IIlIiIil1l1[1] then iliiiIliilIl1il1Ii1 = lII1iIi1IIlIiIil1l1[4] else iliiiIliilIl1il1Ii1 = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[9]] end liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]][llI1Iiil11il1IIIill] = iliiiIliilIl1il1Ii1 else local llI1Iiil11il1IIIill, iliiiIliilIl1il1Ii1 if lII1iIi1IIlIiIil1l1[10] then llI1Iiil11il1IIIill = lII1iIi1IIlIiIil1l1[5] else llI1Iiil11il1IIIill = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[7]] end if lII1iIi1IIlIiIil1l1[1] then iliiiIliilIl1il1Ii1 = lII1iIi1IIlIiIil1l1[4] else iliiiIliilIl1il1Ii1 = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[9]] end liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = llI1Iiil11il1IIIill / iliiiIliilIl1il1Ii1 end elseif Illl1iIIiIIi1111iii >= 16 then if Illl1iIIiIIi1111iii < 18 then if Illl1iIIiIIi1111iii == 17 then liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[7]] else local lIl1IlIi1IlillliilIII = i1liIii11iI1i1I1Il1[lII1iIi1IIlIiIil1l1[3]] local iIlIiI11lll1IIiIIil = {} if lIl1IlIi1IlillliilIII[IliIiIl11IIIll1liil] > 0 then do local lIl1lliI11IiiIl11I1il = {} iIlIiI11lll1IIiIIil = lIIIIii1iiilIi1iiIi({}, { __index = function(il1li1iil1lll11iIII, lIlIi11lllIlii1l1illi) local iIllliIiil11IiI1ili = lIl1lliI11IiiIl11I1il[lIlIi11lllIlii1l1illi] return iIllliIiil11IiI1ili[1][iIllliIiil11IiI1ili[2]] end, __newindex = function(il1li1iil1lll11iIII, lIlIi11lllIlii1l1illi, IiIl1llllIlIilll1ll) local iIllliIiil11IiI1ili = lIl1lliI11IiiIl11I1il[lIlIi11lllIlii1l1illi] iIllliIiil11IiI1ili[1][iIllliIiil11IiI1ili[2]] = IiIl1llllIlIilll1ll end }) for lIlIIi1IiIi1Iilil1IIl = 1, lIl1IlIi1IlillliilIII[IliIiIl11IIIll1liil] do local l111iiIlliiII1lIl11 = ll11lIilIilIIiIlIlI[lIllIIIlI1iIl111iiIlI] if l111iiIlliiII1lIl11[lIl1liIIIi1IIliIlI1i1] == lIllli111lll1i1Ill1ii then lIl1lliI11IiiIl11I1il[lIlIIi1IiIi1Iilil1IIl - 1] = { liIi1lIlI1lIII1IIiI, l111iiIlliiII1lIl11[IIi1l1IilIIiiiI1lll] } elseif l111iiIlliiII1lIl11[lIl1liIIIi1IIliIlI1i1] == lIliliI111l1IIliiiIli then lIl1lliI11IiiIl11I1il[lIlIIi1IiIi1Iilil1IIl - 1] = { lIlil1IIliiiIl1lii11l, l111iiIlliiII1lIl11[IIi1l1IilIIiiiI1lll] } end lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI + 1 end if not lIl1III1l1l1iI1l11iiI[liIi1lIlI1lIII1IIiI] then lIl1III1l1l1iI1l11iiI[liIi1lIlI1lIII1IIiI] = {lIl1lliI11IiiIl11I1il} else ill1111IlIl1iIiI111(lIl1III1l1l1iI1l11iiI[liIi1lIlI1lIII1IIiI], lIl1lliI11IiiIl11I1il) end end end local lIliI1llIIiiliI1lIlii = lIliI1l1ii1IlII1Iiii1(lIl1IlIi1IlillliilIII, liiIlI1liiI1il11lIi, iIlIiI11lll1IIiIIil) liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = lIliI1llIIiiliI1lIlii end elseif Illl1iIIiIIi1111iii ~= 19 then if lII1iIi1IIlIiIil1l1[7] == 46 then lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI - 1 ll11lIilIilIIiIlIlI[lIllIIIlI1iIl111iiIlI] = { [2] = 20, [8] = (lII1iIi1IIlIiIil1l1[8] - 98) % 256, [9] = (lII1iIi1IIlIiIil1l1[9] - 98) % 256 } else local ili1iliIIli1IIII1ii = lII1iIi1IIlIiIil1l1[8] local ili11lI1liIIIi11iii = ili1iliIIli1IIII1ii + 2 local i11Iil1lI11lIiiIilI = { liIi1lIlI1lIII1IIiI[ili1iliIIli1IIII1ii](liIi1lIlI1lIII1IIiI[ili1iliIIli1IIII1ii + 1], liIi1lIlI1lIII1IIiI[ili1iliIIli1IIII1ii + 2]) } for lIlIIi1IiIi1Iilil1IIl = 1, lII1iIi1IIlIiIil1l1[9] do liIi1lIlI1lIII1IIiI[ili11lI1liIIIi11iii + lIlIIi1IiIi1Iilil1IIl] = i11Iil1lI11lIiiIilI[lIlIIi1IiIi1Iilil1IIl] end if liIi1lIlI1lIII1IIiI[ili1iliIIli1IIII1ii + 3] ~= nil then liIi1lIlI1lIII1IIiI[ili1iliIIli1IIII1ii + 2] = liIi1lIlI1lIII1IIiI[ili1iliIIli1IIII1ii + 3] else lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI + 1 end end else liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = lIlil1IIliiiIl1lii11l[lII1iIi1IIlIiIil1l1[7]] end elseif Illl1iIIiIIi1111iii < 14 then local llI1Iiil11il1IIIill, iliiiIliilIl1il1Ii1 if lII1iIi1IIlIiIil1l1[10] then llI1Iiil11il1IIIill = lII1iIi1IIlIiIil1l1[5] else llI1Iiil11il1IIIill = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[7]] end if lII1iIi1IIlIiIil1l1[1] then iliiiIliilIl1il1Ii1 = lII1iIi1IIlIiIil1l1[4] else iliiiIliilIl1il1Ii1 = liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[9]] end liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = llI1Iiil11il1IIIill - iliiiIliilIl1il1Ii1 elseif Illl1iIIiIIi1111iii == 15 then liIi1lIlI1lIII1IIiI[lII1iIi1IIlIiIil1l1[8]] = liiIlI1liiI1il11lIi[lII1iIi1IIlIiIil1l1[6]] elseif lII1iIi1IIlIiIil1l1[9] == 226 then lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI - 1 ll11lIilIilIIiIlIlI[lIllIIIlI1iIl111iiIlI] = { [2] = 19, [8] = (lII1iIi1IIlIiIil1l1[8] - 1) % 256, [7] = (lII1iIi1IIlIiIil1l1[7] - 1) % 256 } elseif lII1iIi1IIlIiIil1l1[9] == 132 then lIllIIIlI1iIl111iiIlI = lIllIIIlI1iIl111iiIlI - 1 ll11lIilIilIIiIlIlI[lIllIIIlI1iIl111iiIlI] = { [2] = 11, [8] = (lII1iIi1IIlIiIil1l1[8] - 249) % 256, [7] = (lII1iIi1IIlIiIil1l1[7] - 249) % 256 } else local lIl1Il1l111li11IiiIll = lII1iIi1IIlIiIil1l1[8] local i1Ii1iIIlIiIiIilill = {} for lli1ililiIlIIIlIIIi, lIl1lliI11IiiIl11I1il in pairs(lIl1III1l1l1iI1l11iiI[liIi1lIlI1lIII1IIiI]) do for lli1ililiIlIIIlIIIi, iIllliIiil11IiI1ili in pairs(lIl1lliI11IiiIl11I1il) do if iIllliIiil11IiI1ili[1] == liIi1lIlI1lIII1IIiI and lIl1Il1l111li11IiiIll <= iIllliIiil11IiI1ili[2] then local lIlI1ii11il11Il1l1i = iIllliIiil11IiI1ili[2] if not i1Ii1iIIlIiIiIilill[lIlI1ii11il11Il1l1i] then lIliI1l1ii1IlII1Iiii1(lIliiI1lIlIIi11iIIIIl, liIi1lIlI1lIII1IIiI[lIlI1ii11il11Il1l1i]) i1Ii1iIIlIiIiIilill[lIlI1ii11il11Il1l1i] = #lIliiI1lIlIIi11iIIIIl end iIllliIiil11IiI1ili[1] = lIliiI1lIlIIi11iIIIIl iIllliIiil11IiI1ili[2] = i1Ii1iIIlIiIiIilill[lIlI1ii11il11Il1l1i] end end end end end end local IlIllli1ii1Il1II1li, iIl111lliII1I1l1iiI, lIl1Il1l111li11IiiIll, lIl11iiliiIl1llliiIiI = iIl11i1lIilIilI1I1i(l1Il1II1IliI1iI1li1) if IlIllli1ii1Il1II1li then if lIl1Il1l111li11IiiIll then return lIlI1IIliIlI1i11i1il1(liIi1lIlI1lIII1IIiI, lIl1Il1l111li11IiiIll, lIl11iiliiIl1llliiIiI) end else IliillliIIl1l1IIiII("Luraph Script:" .. (lIl11iii11llI11IIiiIi[lIllIIIlI1iIl111iiIlI - 1] or "") .. ": " .. l1II11IiIl1l1l1IiII(iIl111lliII1I1l1iiI), 0) end end lIl1IIil1I1liliIl11I1(i11lIlIi11iiIi11l11, liiIlI1liiI1il11lIi) return i11lIlIi11iiIi11l11 end local i1Ii1iIIlIiIiIilill = iIli1Ii11l1i1iIll1I() return lIliI1l1ii1IlII1Iiii1(i1Ii1iIIlIiIiIilill, liiIlI1liiI1il11lIi)() end llii1liliIIIllliiillIlllIi1ili1llI11iiII()) 
